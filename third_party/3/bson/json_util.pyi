from bson.codec_options import CodecOptions
from typing import Any

class DatetimeRepresentation:
    LEGACY: int = ...
    NUMBERLONG: int = ...
    ISO8601: int = ...

class JSONMode:
    LEGACY: int = ...
    RELAXED: int = ...
    CANONICAL: int = ...

class JSONOptions(CodecOptions):
    json_mode: Any = ...
    strict_number_long: bool = ...
    datetime_representation: Any = ...
    strict_uuid: bool = ...
    def __new__(cls: Any, strict_number_long: bool=..., datetime_representation: int=..., strict_uuid: bool=..., json_mode: int=..., *args: Any, **kwargs: Any) -> JSONOptions: ...
    def with_options(self, **kwargs: Any): ...

LEGACY_JSON_OPTIONS: Any
DEFAULT_JSON_OPTIONS = LEGACY_JSON_OPTIONS
CANONICAL_JSON_OPTIONS: Any
RELAXED_JSON_OPTIONS: Any
STRICT_JSON_OPTIONS: Any

def dumps(obj: Any, *args: Any, **kwargs: Any) -> str: ...
def loads(s: str, *args: Any, **kwargs: Any) -> Any: ...
def object_pairs_hook(pairs: Any, json_options: JSONOptions=...) -> Any: ...
def object_hook(dct: Any, json_options: JSONOptions=...) -> Any: ...
def default(obj: Any, json_options: JSONOptions=...) -> Any: ...
